<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="assignment-customer-sapi-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="get:\customers\(id):capptus-customer-system-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\customers\(id):capptus-customer-system-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="get:\customers\(id):capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['1']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/customers/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression='#[output application/json --- payload]' is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customers\(id):capptus-customer-system-api-config-404-application\json-FlowTest" description="Verifying functionality of [get:\customers\(id):capptus-customer-system-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="get:\customers\(id):capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/customers/$(vars.id)/1']">
                <http:headers><![CDATA[#[{"Accept":"application/json"}]]]></http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/json ---payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_404_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customers\(id):capptus-customer-system-api-config-500-application\json-FlowTest" description="Verifying functionality of [get:\customers\(id):capptus-customer-system-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="get:\customers\(id):capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['uno']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/customers/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_500_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="patch:\customers\(id):application\json:capptus-customer-system-api-config-201-application\json-FlowTest" description="Verifying functionality of [patch:\customers\(id):application\json:capptus-customer-system-api-config-201-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="patch:\customers\(id):application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/patch_customers_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['19']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PATCH" path="#['/customers/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/patch_201_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="patch:\customers\(id):application\json:capptus-customer-system-api-config-400-application\json-FlowTest" description="Verifying functionality of [patch:\customers\(id):application\json:capptus-customer-system-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="patch:\customers\(id):application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/patch_customers_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['1']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PATCH" path="#['/customers/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/patch_400_customers_{id}_application_json2.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="patch:\customers\(id):application\json:capptus-customer-system-api-config-404-application\json-FlowTest" description="Verifying functionality of [patch:\customers\(id):application\json:capptus-customer-system-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="patch:\customers\(id):application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/patch_customers_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PATCH" path="#['/customers/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/patch_404_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="patch:\customers\(id):application\json:capptus-customer-system-api-config-500-application\json-FlowTest" description="Verifying functionality of [patch:\customers\(id):application\json:capptus-customer-system-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="patch:\customers\(id):application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/patch_customers_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PATCH" path="#['/customers/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/patch_500_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\customers:application\json:capptus-customer-system-api-config-201-application\json-FlowTest" description="Verifying functionality of [post:\customers:application\json:capptus-customer-system-api-config-201-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="post:\customers:application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_customers_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/customers">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\customers:application\json:capptus-customer-system-api-config-400-application\json-FlowTest" description="Verifying functionality of [post:\customers:application\json:capptus-customer-system-api-config-400-application\json]" expectedErrorType="APIKIT:BAD_REQUEST">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="post:\customers:application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_customers_application_json2.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/customers">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression='#[output application/json ---payload]' is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_400_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\customers:application\json:capptus-customer-system-api-config-404-application\json-FlowTest" description="Verifying functionality of [post:\customers:application\json:capptus-customer-system-api-config-404-application\json]" expectedErrorType="APIKIT:NOT_FOUND">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="post:\customers:application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_customers_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/customers">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_404_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\customers:application\json:capptus-customer-system-api-config-500-application\json-FlowTest" description="Verifying functionality of [post:\customers:application\json:capptus-customer-system-api-config-500-application\json]" expectedErrorType="ANY" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="post:\customers:application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_customers_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/customers">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_500_customers_application_json2.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\customers\(id):capptus-customer-system-api-config-200-application\json-FlowTest" description="Verifying functionality of [delete:\customers\(id):capptus-customer-system-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="delete:\customers\(id):capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['1']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/customers/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_200_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\customers\(id):capptus-customer-system-api-config-400-application\json-FlowTest" description="Verifying functionality of [delete:\customers\(id):capptus-customer-system-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="delete:\customers\(id):capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['1']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/customers/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_400_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\customers\(id):capptus-customer-system-api-config-404-application\json-FlowTest" description="Verifying functionality of [delete:\customers\(id):capptus-customer-system-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="delete:\customers\(id):capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/customers/$(vars.id)/1']">
                <http:headers><![CDATA[#[{"Accept":"application/json"}]]]></http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_404_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\customers\(id):capptus-customer-system-api-config-500-application\json-FlowTest" description="Verifying functionality of [delete:\customers\(id):capptus-customer-system-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="delete:\customers\(id):capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#[2]" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/customers/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/json ---payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_500_customers_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customers:capptus-customer-system-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\customers:capptus-customer-system-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="get:\customers:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/customers">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customers:capptus-customer-system-api-config-400-application\json-FlowTest" description="Verifying functionality of [get:\customers:capptus-customer-system-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="get:\customers:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/customers">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_400_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customers:capptus-customer-system-api-config-404-application\json-FlowTest" description="Verifying functionality of [get:\customers:capptus-customer-system-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="get:\customers:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/customers">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_404_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customers:capptus-customer-system-api-config-500-application\json-FlowTest" description="Verifying functionality of [get:\customers:capptus-customer-system-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="get:\customers:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/customers">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_500_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="405-NotAllowed" description="Verifying functionality of 405-NotAllowed">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="post:\customers:application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_customers_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="/customers">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="406-NotAccesible" description="Verifying functionality of 406-NotAccesible">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="post:\customers:application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_customers_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/customers">
                <http:headers>#[{"Accept":"application/xml","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="415-UnsupportedMediaType" description="Verifying functionality of 415-UnsupportedMediaType">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="capptus-customer-system-api-main" />
            <munit:enable-flow-source value="post:\customers:application\json:capptus-customer-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_customers_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/customers">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/xml"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/json --- payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_customers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
</mule>
